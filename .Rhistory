# Install devtools if not already installed
install.packages("devtools")
# Install the dmc package from GitHub
devtools::install_github("sharlagelfand/dmc")
library(dmc)
q()
library(dmc)
# Display the list of DMC colors available in the package
head(floss)
pip install rpy2
q()
# Reinstall the dmc package
devtools::install_github("sharlagelfand/dmc")
# Load the dmc library
library(dmc)
# Test if dmc function works
dmc("#cf7976", n = 1, method = "cie2000")
devtools::install_github("sharlagelfand/dmc")
library(dmc)
dmc("#cf7976", n = 1, method = "cie2000")
options(bitmapType = "cairo")  # Set Cairo as the rendering backend (works in most environments)
options(device = function() grDevices::pdf(NULL))  # Use a null device for rendering
install.packages("magick")  # Image rendering and manipulation
install.packages("cairoDevice")  # Support for Cairo graphics rendering
library(dmc)
options(bitmapType = "cairo")  # Use Cairo backend
options(device = function() grDevices::pdf(NULL))  # Set null device
# Now test the dmc function
try({
    result <- dmc("#cf7976", n = 1, method = "cie2000")
    print(result)
})
library(dmc)
options(bitmapType = "cairo")  # Use Cairo backend
options(device = function() grDevices::pdf(NULL))  # Set null device
try({
    result <- dmc("#cf7976", n = 1, method = "cie2000")
    print(result)
})
options(device = "pdf")  # Set to a non-interactive device
pdf(NULL)  # Use a null PDF device to prevent rendering
brew install imagemagick
q()
install.packages("cairoDevice")
options(bitmapType = "cairo")
install.packages("magick", dependencies = TRUE)
# List available fonts in R
library(extrafont)
font_import()
fonts()
library(extrafont)
options(device = function() grDevices::pdf(NULL))
dmc("#cf7976", n = 1, method = "cie2000")
library(dmc)
install.packages("devtools")
devtools::install_github("sharlagelfand/dmc")
library(dmc)
sessionInfo()
library(dmc)
devtools::install_github("sharlagelfand/dmc", force = TRUE)
ls("package:dmc")
if (!requireNamespace("devtools", quietly = TRUE)) {
    install.packages("devtools")
}
# Check if devtools is installed and install it if not
if (!requireNamespace("devtools", quietly = TRUE)) {
    install.packages("devtools")
}
# Install dmc package from GitHub
devtools::install_github("sharlagelfand/dmc", force = TRUE)
# Load the dmc package
library(dmc)
# Verify the package is loaded
sessionInfo()
# Test the dmc function
options(device = "pdf")  # Set to non-interactive graphics device
pdf(NULL)  # Set a null PDF device to prevent rendering issues
# Call the dmc function
dmc("#cf7976", n = 1, method = "cie2000")
dmc("#cf7976", n = 1, method = "cie2000")
options(device = function() grDevices::pdf(NULL))
dmc("#cf7976", n = 1, method = "cie2000")
# Verify that the path to ImageMagick is correctly set
Sys.setenv(MAGICK_CONFIGURE_PATH = "/usr/local/Cellar/imagemagick/7.1.0-19/lib/ImageMagick-7.1.0/config-Q16HDRI")
# Check if the path is recognized by R
Sys.getenv("MAGICK_CONFIGURE_PATH")
# Set the MAGICK_CONFIGURE_PATH environment variable to the location of your ImageMagick installation
Sys.setenv(MAGICK_CONFIGURE_PATH = "/usr/local/lib/ImageMagick-7.0.11")
# Verify the path in your R environment
Sys.getenv("MAGICK_CONFIGURE_PATH")
library(dmc)
# Test if the function works after changing graphics settings
result <- dmc("#cf7976", n = 1, method = "cie2000")
print(result)
options(bitmapType = "cairo")
library(magick)
library(cairoDevice)
q()
